#!/usr/bin/env bash

# Installing certificates
#  $1 - Comma-separated certificates URL
#
install_certs () {

    for cert in $1; do
        certFile=$(basename "${cert}");
        wget --progress=dot:giga --timeout=30 -O "/usr/local/share/ca-certificates/${certFile}" "${cert}";
        if command -v java > /dev/null; then
            java_version=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | awk -F '.' '{ print $1"."$2 }')
            if [ "$java_version" == "1.8" ]; then
                keytool -importcert -keystore "${JAVA_HOME}/lib/security/cacerts" \
                    -storepass changeit -file "/usr/local/share/ca-certificates/${certFile}" \
                    -alias "${certFile%.*}" -noprompt;
            else
                keytool -importcert -cacerts \
                    -storepass changeit -file "/usr/local/share/ca-certificates/${certFile}" \
                    -alias "${certFile%.*}" -noprompt;
            fi
        fi;
    done;
    if [ "$1" ]; then
        update-ca-certificates;
    fi;

}

# Uninstalling certificates
#  $1 - Comma-separated certificates URL
#
uninstall_certs () {

    for cert in $1; do
        certFile=$(basename "${cert}");
        rm "/usr/local/share/ca-certificates/${certFile}";
        if command -v java > /dev/null && [ -f "${JAVA_HOME}/lib/security/cacerts" ]; then
            java_version=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | awk -F '.' '{ print $1"."$2 }')
            if [ "$java_version" == "1.8" ]; then
                keytool -delete -keystore "${JAVA_HOME}/lib/security/cacerts" \
                    -storepass changeit\
                    -alias "${certFile%.*}" -noprompt;
            else
                keytool -delete -cacerts \
                    -storepass changeit\
                    -alias "${certFile%.*}" -noprompt;
            fi
        fi;
    done;
    if [ "$1" ]; then
        update-ca-certificates;
    fi;

}